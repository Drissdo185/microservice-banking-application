version: '3.8'

services:
  # Eureka Server
  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - bank-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # PostgreSQL Database for Accounts Service
  accounts-db:
    image: postgres:15
    container_name: accounts-postgres
    environment:
      POSTGRES_DB: accounts_db
      POSTGRES_USER: accounts_user
      POSTGRES_PASSWORD: accounts_password
    ports:
      - "5432:5432"
    volumes:
      - accounts_data:/var/lib/postgresql/data
    networks:
      - bank-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cards_user -d cards_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    

  # PostgreSQL Database for Cards Service
  cards-db:
    image: postgres:15
    container_name: cards-postgres
    environment:
      POSTGRES_DB: cards_db
      POSTGRES_USER: cards_user
      POSTGRES_PASSWORD: cards_password
    ports:
      - "5433:5432"
    volumes:
      - cards_data:/var/lib/postgresql/data
    networks:
      - bank-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cards_user -d cards_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # PostgreSQL Database for Loans Service
  loans-db:
    image: postgres:15
    container_name: loans-postgres
    environment:
      POSTGRES_DB: loans_db
      POSTGRES_USER: loans_user
      POSTGRES_PASSWORD: loans_password
    ports:
      - "5434:5432"
    volumes:
      - loans_data:/var/lib/postgresql/data
    networks:
      - bank-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U loans_user -d loans_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Accounts Microservice
  accounts-service:
    build:
      context: ./accounts
      dockerfile: Dockerfile
    container_name: accounts-service
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://accounts-db:5432/accounts_db
      SPRING_DATASOURCE_USERNAME: accounts_user
      SPRING_DATASOURCE_PASSWORD: accounts_password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      EUREKA_SERVER_URL: http://eureka-server:8761/eureka/
      HOSTNAME: accounts-service
    depends_on:
      accounts-db:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    networks:
      - bank-network
    restart: unless-stopped

  # Cards Microservice
  cards-service:
    build:
      context: ./cards
      dockerfile: Dockerfile
    container_name: cards-service
    ports:
      - "8090:8090"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://cards-db:5432/cards_db
      SPRING_DATASOURCE_USERNAME: cards_user
      SPRING_DATASOURCE_PASSWORD: cards_password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      EUREKA_SERVER_URL: http://eureka-server:8761/eureka/
      HOSTNAME: cards-service
    depends_on:
      cards-db:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    networks:
      - bank-network
    restart: unless-stopped

  # Loans Microservice
  loans-service:
    build:
      context: ./loans
      dockerfile: Dockerfile
    container_name: loans-service
    ports:
      - "8100:8100"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://loans-db:5432/loans_db
      SPRING_DATASOURCE_USERNAME: loans_user
      SPRING_DATASOURCE_PASSWORD: loans_password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      EUREKA_SERVER_URL: http://eureka-server:8761/eureka/
      HOSTNAME: loans-service
    depends_on:
      loans-db:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    networks:
      - bank-network
    restart: unless-stopped

volumes:
  accounts_data:
  cards_data:
  loans_data:

networks:
  bank-network:
    driver: bridge